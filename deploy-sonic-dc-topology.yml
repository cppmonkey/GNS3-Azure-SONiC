---
- hosts: localhost
  # Call the collections to use the respective modules
  collections:
    - davidban77.gns3
  vars:
    gns3_host: 192.168.1.34
    gns3_url: "http://{{ gns3_host }}"
    gns3_port: 80
    switches:
      - name: leaf-1
        asn: 64001
        mac: "52:54:00:11:34:51"
        loopback_ip4: 10.1.0.1/32
        telnet_port: 5000
        PortChannel_ip4: 12.0.0.1/24
        Ethernet8_ip4: 14.0.0.1/24
        bgp_neighbors:
          - ip: 12.0.0.2
            asn: 64002
          - ip: 14.0.0.2
            asn: 64004
      - name: tor-1
        asn: 64002
        mac: "52:54:00:12:34:51"
        loopback_ip4: 10.1.0.2/32
        telnet_port: 5002
        PortChannel_ip4: 12.0.0.2/24
        vlan_ip4: 10.0.0.1/24
        vlan: 100
        Ethernet8_ip4: 32.0.0.1/24
        bgp_neighbors:
          - ip: 12.0.0.1
            asn: 64001
          - ip: 32.0.0.2
            asn: 64003
      - name: leaf-2
        asn: 64003
        mac: "52:54:00:21:34:51"
        loopback_ip4: 10.2.0.1/32
        telnet_port: 5004
        PortChannel_ip4: 34.0.0.2/24
        Ethernet8_ip4: 32.0.0.3/24
        bgp_neighbors:
          - ip: 32.0.0.2
            asn: 64002
          - ip: 34.0.0.2
            asn: 64004
      - name: tor-2
        asn: 64004
        mac: "52:54:00:22:34:51"
        loopback_ip4: 10.2.0.2/32
        telnet_port: 5006
        PortChannel_ip4: 34.0.0.2/24
        vlan_ip4: 30.0.0.1/24
        vlan: 300
        Ethernet8_ip4: 14.0.0.2/24
        bgp_neighbors:
          - ip: 14.0.0.1
            asn: 64001
          - ip: 34.0.0.1
            asn: 64003

  tasks:
    - name: Get the server facts
      gns3_facts:
        url: "{{ gns3_url }}"
        port: "{{ gns3_port | default(omit) }}"
        get_images: all
        get_compute_ports: yes
      register: result

    - name: Facts
      debug:
        var: result

    - name: Create a project
      gns3_project:
        url: "{{ gns3_url }}"
        port: "{{ gns3_port | default(omit) }}"
        state: present
        project_name: sonic
        nodes_spec:
            - name: leaf-1
              template: SONiC latest
            - name: tor-1
              template: SONiC latest
            - name: leaf-2
              template: SONiC latest
            - name: tor-2
              template: SONiC latest
            - name: PC1
              template: VPCS
            - name: PC2
              template: VPCS
            - name: PC3
              template: VPCS
            - name: PC4
              template: VPCS
            - name: PC5
              template: VPCS
            - name: PC6
              template: VPCS
        links_spec:
            - ['leaf-1', 'Ethernet0', 'tor-1', 'Ethernet0']
            - ['leaf-1', 'Ethernet1', 'tor-1', 'Ethernet1']
            - ['leaf-1', 'Ethernet2', 'tor-2', 'Ethernet2']
            - ['leaf-2', 'Ethernet0', 'tor-2', 'Ethernet0']
            - ['leaf-2', 'Ethernet1', 'tor-2', 'Ethernet1']
            - ['leaf-2', 'Ethernet2', 'tor-1', 'Ethernet2']
            - ['PC1', 'Ethernet0', 'tor-1', 'Ethernet3']
            - ['PC2', 'Ethernet0', 'tor-1', 'Ethernet4']
            - ['PC3', 'Ethernet0', 'tor-1', 'Ethernet5']
            - ['PC4', 'Ethernet0', 'tor-2', 'Ethernet3']
            - ['PC5', 'Ethernet0', 'tor-2', 'Ethernet4']
            - ['PC6', 'Ethernet0', 'tor-2', 'Ethernet5']

    - name: Setup VPCs
      gns3_node_file:
        url: "{{ gns3_url }}"
        port: "{{ gns3_port | default(omit) }}"
        state: present
        project_name: sonic
        node_name: "{{ item.node }}"
        dest: startup.vpc
        data: "{{ item.data }}"
      loop:
        - node: PC1
          data: |
            set pcname PC1
            ip 10.0.0.11 255.255.255.0 gateway 10.0.0.1
        - node: PC2
          data: |
            set pcname PC2
            ip 10.0.0.12 255.255.255.0 gateway 10.0.0.1
        - node: PC3
          data: |
            set pcname PC3
            ip 10.0.0.13 255.255.255.0 gateway 10.0.0.1
        - node: PC4
          data: |
            set pcname PC4
            ip 30.0.0.14 255.255.255.0 gateway 30.0.0.1
        - node: PC5
          data: |
            set pcname PC5
            ip 30.0.0.15 255.255.255.0 gateway 30.0.0.1
        - node: PC6
          data: |
            set pcname PC6
            ip 30.0.0.16 255.255.255.0 gateway 30.0.0.1


    ## TODO Start the Objects!!!

    - name: setup PortChannels (LAGs)
      ansible.netcommon.telnet:
        host: "{{ gns3_host | default(omit) }}"
        port: "{{ item.telnet_port }}"
        user: admin
        password: YourPaSsWoRd
        send_newline: yes
        prompts:
          - "[$#]"
        command:
          - sudo -s
          - config portchannel add PortChannel0001
          - config portchannel member add PortChannel0001 Ethernet0
          - config portchannel member add PortChannel0001 Ethernet4
          - show interfaces portchannel
          - "config hostname {{ item.name }}"
          - exit
      loop: "{{ switches }}"
      loop_control:
        label: "{{ item.name }}"
      register: result

    - name: LAG Creation
      debug:
        var: result


    - name: Remove Original BGP 65100
      ansible.netcommon.telnet:
        host: "{{ gns3_host | default(omit) }}"
        port: "{{ item.telnet_port }}"
        user: admin
        password: YourPaSsWoRd
        send_newline: yes
        prompts:
          - '[$#]'
        command:
          - sudo vtysh
          - configure
          - no route bgp 65100
          - exit
          - exit
          - exit
      loop: "{{ switches }}"
      loop_control:
        label: "{{ item.name }}"
      register: result

    - name: default BGP removal
      ansible.builtin.debug:
        var: result


    - name: default BGP neighbors and ips removal
      ansible.netcommon.telnet:
        host: "{{ gns3_host | default(omit) }}"
        port: "{{ item.telnet_port }}"
        user: admin
        password: YourPaSsWoRd
        send_newline: yes
        prompts:
          - '[$#]'
        command:
          - sudo -s
          - config interface ip remove Loopback0 10.1.0.1/32
          - config interface ip remove Ethernet0 10.0.0.0/31
          - config bgp remove neighbor 10.0.0.1
          - config interface ip remove Ethernet4 10.0.0.2/31
          - config bgp remove neighbor 10.0.0.3
          - config interface ip remove Ethernet8 10.0.0.4/31
          - config bgp remove neighbor 10.0.0.5
          - config interface ip remove Ethernet12 10.0.0.6/31
          - config bgp remove neighbor 10.0.0.7
          - config interface ip remove Ethernet16 10.0.0.8/31
          - config bgp remove neighbor 10.0.0.9
          - config interface ip remove Ethernet20 10.0.0.10/31
          - config bgp remove neighbor 10.0.0.11
          - config interface ip remove Ethernet24 10.0.0.12/31
          - config bgp remove neighbor 10.0.0.13
          - config interface ip remove Ethernet28 10.0.0.14/31
          - config bgp remove neighbor 10.0.0.15
          - config interface ip remove Ethernet32 10.0.0.16/31
          - config bgp remove neighbor 10.0.0.17
          - config interface ip remove Ethernet36 10.0.0.18/31
          - config bgp remove neighbor 10.0.0.19
          - config interface ip remove Ethernet40 10.0.0.20/31
          - config bgp remove neighbor 10.0.0.21
          - config interface ip remove Ethernet44 10.0.0.22/31
          - config bgp remove neighbor 10.0.0.23
          - config interface ip remove Ethernet48 10.0.0.24/31
          - config bgp remove neighbor 10.0.0.25
          - config interface ip remove Ethernet52 10.0.0.26/31
          - config bgp remove neighbor 10.0.0.27
          - config interface ip remove Ethernet56 10.0.0.28/31
          - config bgp remove neighbor 10.0.0.29
          - config interface ip remove Ethernet60 10.0.0.30/31
          - config bgp remove neighbor 10.0.0.31
          - config interface ip remove Ethernet64 10.0.0.32/31
          - config bgp remove neighbor 10.0.0.33
          - config interface ip remove Ethernet68 10.0.0.34/31
          - config bgp remove neighbor 10.0.0.35
          - config interface ip remove Ethernet72 10.0.0.36/31
          - config bgp remove neighbor 10.0.0.37
          - config interface ip remove Ethernet76 10.0.0.38/31
          - config bgp remove neighbor 10.0.0.39
          - config interface ip remove Ethernet80 10.0.0.40/31
          - config bgp remove neighbor 10.0.0.41
          - config interface ip remove Ethernet84 10.0.0.42/31
          - config bgp remove neighbor 10.0.0.43
          - config interface ip remove Ethernet88 10.0.0.44/31
          - config bgp remove neighbor 10.0.0.45
          - config interface ip remove Ethernet92 10.0.0.46/31
          - config bgp remove neighbor 10.0.0.47
          - config interface ip remove Ethernet96 10.0.0.48/31
          - config bgp remove neighbor 10.0.0.49
          - config interface ip remove Ethernet100 10.0.0.50/31
          - config bgp remove neighbor 10.0.0.51
          - config interface ip remove Ethernet104 10.0.0.52/31
          - config bgp remove neighbor 10.0.0.53
          - config interface ip remove Ethernet108 10.0.0.54/31
          - config bgp remove neighbor 10.0.0.55
          - config interface ip remove Ethernet112 10.0.0.56/31
          - config bgp remove neighbor 10.0.0.57
          - config interface ip remove Ethernet116 10.0.0.58/31
          - config bgp remove neighbor 10.0.0.59
          - config interface ip remove Ethernet120 10.0.0.60/31
          - config bgp remove neighbor 10.0.0.61
          - config interface ip remove Ethernet124 10.0.0.62/31
          - config bgp remove neighbor 10.0.0.63
          - exit
      loop: "{{ switches }}"
      loop_control:
        label: "{{ item.name }}"
      register: result

    - name: default BGP neighbor removal
      ansible.builtin.debug:
        var: result


    - name: Setup vlans
      ansible.netcommon.telnet:
        host: "{{ gns3_host | default(omit) }}"
        port: "{{ item.telnet_port }}"
        user: admin
        password: YourPaSsWoRd
        send_newline: yes
        prompts:
          - "[$#]"
        command:
          - sudo -s
          - "config vlan add {{ item.vlan }}"
          - "config vlan member add -u {{ item.vlan }} Ethernet12"
          - "config vlan member add -u {{ item.vlan }} Ethernet16"
          - "config vlan member add -u {{ item.vlan }} Ethernet20"
          - show vlan brief
          # Setup IP Addresses
          - "config interface ip add Vlan{{ item.vlan }} {{ item.vlan_ip4 }}"
          - show ip interfaces
          - show ip route
          # Enable ARP packet forwarding
          - ebtables -D FORWARD -p ARP -j DROP
          # Save ebtables changes
          - config save -y
          - exit
      loop:
        - "{{ switches[1] }}"
        - "{{ switches[3] }}"
      loop_control:
        label: "{{ item.name }}"
      when: item.vlan is defined
      register: result

    - name: vlans
      debug:
        var: result

    - name: Create BGP
      ansible.netcommon.telnet:
        host: "{{ gns3_host | default(omit) }}"
        port: "{{ item.telnet_port }}"
        user: admin
        password: YourPaSsWoRd
        send_newline: yes
        prompts:
          - '[$#]'
        command:
          - "sudo config interface ip add Loopback0 {{ item.loopback_ip4 }}"
          - "sudo config interface ip add Ethernet8 {{ item.Ethernet8_ip4 }}"
          - "sudo config interface ip add PortChannel0001 {{ item.PortChannel_ip4 }}"
          - sudo config save -y
          - "sudo sed -i 's/65100/{{ item.asn }}/g' /etc/sonic/config_db.json"
          - "sudo sed -i 's/52:54:00:12:34:56/{{ item.mac }}/g' /etc/sonic/config_db.json"
          - sudo config reload -y
          - sudo vtysh
          - configure
          - "route bgp {{ item.asn }}"
          - address-family ipv4 unicast
          - redistribute connected
          - "neighbor {{ item.bgp_neighbors[0].ip }} remote-as {{ item.bgp_neighbors[0].asn }}"
          - "neighbor {{ item.bgp_neighbors[1].ip }} remote-as {{ item.bgp_neighbors[1].asn }}"
          - end
          - write
          - exit
          - exit
      loop: "{{ switches }}"
      loop_control:
        label: "{{ item.name }}"
      register: result

    - name: default BGP removal
      ansible.builtin.debug:
        var: result